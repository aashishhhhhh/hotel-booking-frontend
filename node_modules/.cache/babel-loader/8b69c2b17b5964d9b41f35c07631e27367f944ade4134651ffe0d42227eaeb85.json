{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createVNode as _createVNode, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"flex-grow-1\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AppSidebar = _resolveComponent(\"AppSidebar\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    id: \"app\",\n    class: _normalizeClass({\n      'sidebar-hidden': $options.shouldHideSidebar\n    })\n  }, [_createCommentVNode(\" Conditionally render the sidebar \"), !$options.shouldHideSidebar ? (_openBlock(), _createBlock(_component_AppSidebar, {\n    key: 0\n  })) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_router_view)])], 2 /* CLASS */);\n}","map":{"version":3,"names":["class","_createElementBlock","id","_normalizeClass","$options","shouldHideSidebar","_createCommentVNode","_createBlock","_component_AppSidebar","key","_createElementVNode","_hoisted_1","_createVNode","_component_router_view"],"sources":["C:\\laravel\\HMS\\hotel-booking-frontend\\src\\App.vue"],"sourcesContent":["<template>\n    <div id=\"app\" :class=\"{ 'sidebar-hidden': shouldHideSidebar }\">\n      <!-- Conditionally render the sidebar -->\n      <AppSidebar v-if=\"!shouldHideSidebar\" />\n      <div class=\"flex-grow-1\">\n        <router-view />\n      </div>\n    </div>\n  </template>\n\n  <script>\n  import AppSidebar from '@/components/AppSidebar.vue';\n\n  export default {\n    name: 'App',\n    components: {\n      AppSidebar,\n    },\n    computed: {\n      shouldHideSidebar() {\n        // Check if the current route's meta has 'hideSidebar'\n        return this.$route.meta.hideSidebar || false;\n      },\n    },\n  };\n  </script>\n\n  <style>\n  #app {\n    display: flex;\n    font-family: Avenir, Helvetica, Arial, sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    text-align: left;\n    color: #2c3e50;\n    height: 100vh;\n  }\n\n  .flex-grow-1 {\n    flex-grow: 1;\n    padding: 20px;\n    overflow-y: auto;\n  }\n\n  /* When the sidebar is hidden */\n  sidebar-hidden {\n    display: block; /* Adjust layout if needed */\n  }\n\n  sidebar-hidden .flex-grow-1 {\n    padding: 40px; /* Add more padding to adjust layout */\n    margin: 0 auto; /* Center the content horizontally if needed */\n    max-width: 800px; /* Optionally constrain the content width */\n  }\n  </style>\n"],"mappings":";;EAIWA,KAAK,EAAC;AAAa;;;;uBAH1BC,mBAAA,CAMM;IANDC,EAAE,EAAC,KAAK;IAAEF,KAAK,EADxBG,eAAA;MAAA,kBAC8CC,QAAA,CAAAC;IAAiB;MACzDC,mBAAA,sCAAyC,E,CACtBF,QAAA,CAAAC,iBAAiB,I,cAApCE,YAAA,CAAwCC,qBAAA;IAH9CC,GAAA;EAAA,MAAAH,mBAAA,gBAIMI,mBAAA,CAEM,OAFNC,UAEM,GADJC,YAAA,CAAeC,sBAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}