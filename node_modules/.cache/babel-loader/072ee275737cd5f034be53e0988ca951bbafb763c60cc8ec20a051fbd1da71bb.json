{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport HomePage from '../views/HomePage.vue';\nimport AppHotels from '../components/AppHotels.vue';\nconst routes = [{\n  path: '/',\n  name: 'HomePage',\n  component: HomePage,\n  beforeEnter: () => {\n    console.log('Entering AppHotels');\n  }\n}, {\n  path: '/hotels',\n  name: 'AppHotels',\n  component: AppHotels,\n  beforeEnter: () => {\n    console.log('Entering AppHotels');\n  }\n}, {\n  path: '/login',\n  name: 'login',\n  component: Login\n}\n// Add more routes as needed\n];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\nrouter.beforeEach(async (to, from, next) => {\n  if (to.meta.requiresAuth) {\n    try {\n      await axios.get('/api/user'); // Check if the user is authenticated\n      next(); // Allow navigation\n    } catch (error) {\n      next({\n        name: 'login'\n      }); // Redirect to login if unauthenticated\n    }\n  } else {\n    next(); // Always allow non-protected routes\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","HomePage","AppHotels","routes","path","name","component","beforeEnter","console","log","Login","router","history","beforeEach","to","from","next","meta","requiresAuth","axios","get","error"],"sources":["C:/laravel/HMS/hotel-booking-frontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\nimport HomePage from '../views/HomePage.vue';\nimport AppHotels from '../components/AppHotels.vue';\n\nconst routes = [\n  {\n    path: '/',\n    name: 'HomePage',\n    component: HomePage,\n    beforeEnter: () => {\n        console.log('Entering AppHotels');\n      },\n  },\n  {\n    path: '/hotels',\n    name: 'AppHotels',\n    component: AppHotels,\n    beforeEnter: () => {\n        console.log('Entering AppHotels');\n      },\n  },\n  {\n    path: '/login',\n    name: 'login',\n    component: Login,\n},\n  // Add more routes as needed\n];\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes,\n});\n\nrouter.beforeEach(async (to, from, next) => {\n    if (to.meta.requiresAuth) {\n        try {\n            await axios.get('/api/user'); // Check if the user is authenticated\n            next(); // Allow navigation\n        } catch (error) {\n            next({ name: 'login' }); // Redirect to login if unauthenticated\n        }\n    } else {\n        next(); // Always allow non-protected routes\n    }\n});\n\nexport default router;\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,SAAS,MAAM,6BAA6B;AAEnD,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEL,QAAQ;EACnBM,WAAW,EAAEA,CAAA,KAAM;IACfC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;EACnC;AACJ,CAAC,EACD;EACEL,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAEJ,SAAS;EACpBK,WAAW,EAAEA,CAAA,KAAM;IACfC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;EACnC;AACJ,CAAC,EACD;EACEL,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEI;AACf;AACE;AAAA,CACD;AAED,MAAMC,MAAM,GAAGZ,YAAY,CAAC;EAC1Ba,OAAO,EAAEZ,gBAAgB,CAAC,CAAC;EAC3BG;AACF,CAAC,CAAC;AAEFQ,MAAM,CAACE,UAAU,CAAC,OAAOC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACxC,IAAIF,EAAE,CAACG,IAAI,CAACC,YAAY,EAAE;IACtB,IAAI;MACA,MAAMC,KAAK,CAACC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC;MAC9BJ,IAAI,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC,OAAOK,KAAK,EAAE;MACZL,IAAI,CAAC;QAAEX,IAAI,EAAE;MAAQ,CAAC,CAAC,CAAC,CAAC;IAC7B;EACJ,CAAC,MAAM;IACHW,IAAI,CAAC,CAAC,CAAC,CAAC;EACZ;AACJ,CAAC,CAAC;AAEF,eAAeL,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}