{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport HomePage from '../views/HomePage.vue';\nimport AppHotels from '../components/AppHotels.vue';\nimport axios from 'axios';\nconst routes = [{\n  path: '/',\n  name: 'HomePage',\n  component: HomePage,\n  meta: {\n    requiresAuth: true\n  } // Protect this route\n}, {\n  path: '/hotels',\n  name: 'AppHotels',\n  component: AppHotels\n}\n//   {\n//     path: '/login',\n//     name: 'login',\n//     component: Login,\n// },\n// Add more routes as needed\n];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\nrouter.beforeEach(async (to, from, next) => {\n  if (to.meta.requiresAuth) {\n    try {\n      const response = await axios.get('/user');\n      // console.log('Response data:', response.data);\n      next(); // Allow navigation\n    } catch (error) {\n      next({\n        name: 'login'\n      }); // Redirect to login if unauthenticated\n    }\n  } else {\n    next(); // Always allow non-protected routes\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","HomePage","AppHotels","axios","routes","path","name","component","meta","requiresAuth","router","history","beforeEach","to","from","next","response","get","error"],"sources":["C:/laravel/HMS/hotel-booking-frontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\nimport HomePage from '../views/HomePage.vue';\nimport AppHotels from '../components/AppHotels.vue';\nimport axios from 'axios';\n\nconst routes = [\n  {\n    path: '/',\n    name: 'HomePage',\n    component: HomePage,\n    meta: { requiresAuth: true }, // Protect this route\n  },\n  {\n    path: '/hotels',\n    name: 'AppHotels',\n    component: AppHotels,\n\n  },\n//   {\n//     path: '/login',\n//     name: 'login',\n//     component: Login,\n// },\n  // Add more routes as needed\n];\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes,\n});\n\nrouter.beforeEach(async (to, from, next) => {\n    if (to.meta.requiresAuth) {\n        try {\n            const response = await axios.get('/user');\n            // console.log('Response data:', response.data);\n           next(); // Allow navigation\n        } catch (error) {\n            next({ name: 'login' }); // Redirect to login if unauthenticated\n        }\n    } else {\n        next(); // Always allow non-protected routes\n    }\n});\n\nexport default router;\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEN,QAAQ;EACnBO,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK,CAAC,CAAE;AAChC,CAAC,EACD;EACEJ,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAEL;AAEb;AACF;AACA;AACA;AACA;AACA;AACE;AAAA,CACD;AAED,MAAMQ,MAAM,GAAGX,YAAY,CAAC;EAC1BY,OAAO,EAAEX,gBAAgB,CAAC,CAAC;EAC3BI;AACF,CAAC,CAAC;AAEFM,MAAM,CAACE,UAAU,CAAC,OAAOC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACxC,IAAIF,EAAE,CAACL,IAAI,CAACC,YAAY,EAAE;IACtB,IAAI;MACA,MAAMO,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,OAAO,CAAC;MACzC;MACDF,IAAI,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZH,IAAI,CAAC;QAAET,IAAI,EAAE;MAAQ,CAAC,CAAC,CAAC,CAAC;IAC7B;EACJ,CAAC,MAAM;IACHS,IAAI,CAAC,CAAC,CAAC,CAAC;EACZ;AACJ,CAAC,CAAC;AAEF,eAAeL,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}