{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport helpers from '@/helpers/helpers';\nexport default {\n  name: \"AppLogin\",\n  data() {\n    return {\n      email: '',\n      password: '',\n      error: null,\n      csrfToken: ''\n    };\n  },\n  methods: {\n    async login() {\n      const token = await helpers.getCsrfToken();\n      this.csrfToken = token;\n      console.log(this.csrfToken);\n      axios.post('/user/login', {\n        email: this.email,\n        password: this.password\n      }, {\n        headers: {\n          'X-CSRF-TOKEN': this.csrfToken\n        }\n      }).then(response => {\n        if (response.data.id != '') {\n          console.log(this.$router.push({\n            name: 'HomePage'\n          }));\n        }\n        // Handle successful login here, e.g., store user data or redirect\n      }).catch(error => {\n        console.error('Login Error:', error.response ? error.response.data : error.message);\n        this.error = error.response ? error.response.data.message : error.message;\n      });\n    }\n    // axios.post('/user/login', {\n    //     email: this.email,\n    //     password: this.password,\n    //     })\n    //     .then((response) => {\n    //     console.log(response);\n    //     })\n    //     .catch((error) => {\n    //     this.error = error.message;\n    //     });\n  }\n};","map":{"version":3,"names":["axios","helpers","name","data","email","password","error","csrfToken","methods","login","token","getCsrfToken","console","log","post","headers","then","response","id","$router","push","catch","message"],"sources":["C:\\laravel\\Hotel-Booking-System\\hotel-booking-frontend\\src\\components\\auth\\AppLogin.vue"],"sourcesContent":["<template>\r\n<meta name=\"csrf-token\" content=\"your-csrf-token-value\">\r\n<div class=\"container mt-5\">\r\n      <div class=\"row justify-content-center\">\r\n        <div class=\"col-md-6\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header text-center\">\r\n              <h4>App Login</h4>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"mb-3\">\r\n                  <label for=\"email\" class=\"form-label\">Email Address</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    class=\"form-control\"\r\n                    v-model=\"email\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                  <label for=\"password\" class=\"form-label\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    class=\"form-control\"\r\n                    v-model=\"password\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div v-if=\"error\" class=\"alert alert-danger\">\r\n                  {{ error }}\r\n                </div>\r\n                <button v-on:click=\"login\" class=\"btn btn-primary w-100\">\r\n                  Login\r\n                </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n\r\n  <script>\r\nimport axios from 'axios';\r\nimport helpers from '@/helpers/helpers';\r\n\r\n  export default {\r\n    name: \"AppLogin\",\r\n    data() {\r\n      return {\r\n        email: '',\r\n        password: '',\r\n        error: null,\r\n        csrfToken:'',\r\n      };\r\n\r\n    },\r\n\r\n    methods: {\r\n       async login()\r\n        {\r\n            const token = await  helpers.getCsrfToken();\r\n            this.csrfToken = token;\r\n            console.log(this.csrfToken)\r\n            axios.post('/user/login', {\r\n                email: this.email,\r\n                password: this.password,\r\n            },\r\n            {\r\n                headers:{\r\n                    'X-CSRF-TOKEN': this.csrfToken,\r\n                }\r\n            }\r\n        )\r\n            .then((response) => {\r\n                if (response.data.id !='') {\r\n                    console.log(this.$router.push({ name: 'HomePage' }));\r\n                }\r\n                // Handle successful login here, e.g., store user data or redirect\r\n            })\r\n            .catch((error) => {\r\n                console.error('Login Error:', error.response ? error.response.data : error.message);\r\n                this.error = error.response ? error.response.data.message : error.message;\r\n            });\r\n\r\n        }\r\n        // axios.post('/user/login', {\r\n        //     email: this.email,\r\n        //     password: this.password,\r\n        //     })\r\n        //     .then((response) => {\r\n        //     console.log(response);\r\n        //     })\r\n        //     .catch((error) => {\r\n        //     this.error = error.message;\r\n        //     });\r\n\r\n        }\r\n  }\r\n  </script>\r\n"],"mappings":";AA4CA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,OAAM,MAAO,mBAAmB;AAErC,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,IAAI;MACXC,SAAS,EAAC;IACZ,CAAC;EAEH,CAAC;EAEDC,OAAO,EAAE;IACN,MAAMC,KAAKA,CAAA,EACV;MACI,MAAMC,KAAI,GAAI,MAAOT,OAAO,CAACU,YAAY,CAAC,CAAC;MAC3C,IAAI,CAACJ,SAAQ,GAAIG,KAAK;MACtBE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,SAAS;MAC1BP,KAAK,CAACc,IAAI,CAAC,aAAa,EAAE;QACtBV,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,QAAQ,EAAE,IAAI,CAACA;MACnB,CAAC,EACD;QACIU,OAAO,EAAC;UACJ,cAAc,EAAE,IAAI,CAACR;QACzB;MACJ,CACJ,EACKS,IAAI,CAAEC,QAAQ,IAAK;QAChB,IAAIA,QAAQ,CAACd,IAAI,CAACe,EAAC,IAAI,EAAE,EAAE;UACvBN,OAAO,CAACC,GAAG,CAAC,IAAI,CAACM,OAAO,CAACC,IAAI,CAAC;YAAElB,IAAI,EAAE;UAAW,CAAC,CAAC,CAAC;QACxD;QACA;MACJ,CAAC,EACAmB,KAAK,CAAEf,KAAK,IAAK;QACdM,OAAO,CAACN,KAAK,CAAC,cAAc,EAAEA,KAAK,CAACW,QAAO,GAAIX,KAAK,CAACW,QAAQ,CAACd,IAAG,GAAIG,KAAK,CAACgB,OAAO,CAAC;QACnF,IAAI,CAAChB,KAAI,GAAIA,KAAK,CAACW,QAAO,GAAIX,KAAK,CAACW,QAAQ,CAACd,IAAI,CAACmB,OAAM,GAAIhB,KAAK,CAACgB,OAAO;MAC7E,CAAC,CAAC;IAEN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAEA;AACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}