{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport axios from 'axios';\nconst routes = [{\n  path: '/',\n  name: 'HomePage',\n  component: () => import('@/views/HomePage.vue'),\n  meta: {\n    requiresAuth: true\n  } // Protect this route\n}, {\n  path: '/AppUserProfile',\n  name: 'AppUserProfile',\n  component: () => import('@/components/AppUserProfile.vue'),\n  meta: {\n    requiresAuth: true\n  } // Protect this route\n}, {\n  path: '/AppUserProfile',\n  name: 'AppUserProfile',\n  component: () => import('@/components/AppUserProfile.vue'),\n  meta: {\n    requiresAuth: true\n  } // Protect this route\n}, {\n  path: '/login',\n  name: 'AppLogin',\n  component: () => import('@/components/auth/AppLogin.vue'),\n  meta: {\n    hideSidebar: true // Custom property to hide the sidebar\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\nrouter.beforeEach(async (to, from, next) => {\n  if (to.meta.requiresAuth) {\n    try {\n      const response = await axios.get('/user');\n      // Check if the user is authenticated\n      console.log(response.data.id);\n      if (response.data.id != undefined) {\n        next();\n        // Allow navigation\n      } else {\n        next({\n          name: 'AppLogin'\n        });\n        // Redirect to login\n      }\n    } catch (error) {\n      // Handle unauthenticated state or other errors\n      next({\n        name: 'AppLogin'\n      });\n      // Redirect to login\n      console.log('2');\n    }\n  } else {\n    next(); // Always allow navigation for non-protected routes\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","axios","routes","path","name","component","meta","requiresAuth","hideSidebar","router","history","beforeEach","to","from","next","response","get","console","log","data","id","undefined","error"],"sources":["C:/laravel/Documentation-System/documentation-system-frontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\nimport axios from 'axios';\n\nconst routes = [\n  {\n    path: '/',\n    name: 'HomePage',\n    component: () => import('@/views/HomePage.vue'),\n    meta: { requiresAuth: true }, // Protect this route\n},\n{\n    path: '/AppUserProfile',\n    name: 'AppUserProfile',\n    component: () => import('@/components/AppUserProfile.vue'),\n    meta: { requiresAuth: true }, // Protect this route\n  },\n  {\n    path: '/AppUserProfile',\n    name: 'AppUserProfile',\n    component: () => import('@/components/AppUserProfile.vue'),\n    meta: { requiresAuth: true }, // Protect this route\n  },\n  {\n    path: '/login',\n    name: 'AppLogin',\n    component: () => import('@/components/auth/AppLogin.vue'),\n    meta: {\n        hideSidebar: true, // Custom property to hide the sidebar\n      },\n  },\n];\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes,\n});\n\nrouter.beforeEach(async (to, from, next) => {\n  if (to.meta.requiresAuth) {\n    try {\n      const response = await axios.get('/user');\n      // Check if the user is authenticated\n      console.log(response.data.id)\n      if (response.data.id!=undefined) {\n        next();\n         // Allow navigation\n      } else {\n        next({ name: 'AppLogin' });\n        // Redirect to login\n    }\n} catch (error) {\n    // Handle unauthenticated state or other errors\n    next({ name: 'AppLogin' });\n    // Redirect to login\n    console.log('2')\n}\n} else {\n    next(); // Always allow navigation for non-protected routes\n  }\n});\n\nexport default router;\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,sBAAsB,CAAC;EAC/CC,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK,CAAC,CAAE;AAClC,CAAC,EACD;EACIJ,IAAI,EAAE,iBAAiB;EACvBC,IAAI,EAAE,gBAAgB;EACtBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,iCAAiC,CAAC;EAC1DC,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK,CAAC,CAAE;AAChC,CAAC,EACD;EACEJ,IAAI,EAAE,iBAAiB;EACvBC,IAAI,EAAE,gBAAgB;EACtBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,iCAAiC,CAAC;EAC1DC,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK,CAAC,CAAE;AAChC,CAAC,EACD;EACEJ,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,gCAAgC,CAAC;EACzDC,IAAI,EAAE;IACFE,WAAW,EAAE,IAAI,CAAE;EACrB;AACJ,CAAC,CACF;AAED,MAAMC,MAAM,GAAGV,YAAY,CAAC;EAC1BW,OAAO,EAAEV,gBAAgB,CAAC,CAAC;EAC3BE;AACF,CAAC,CAAC;AAEFO,MAAM,CAACE,UAAU,CAAC,OAAOC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAC1C,IAAIF,EAAE,CAACN,IAAI,CAACC,YAAY,EAAE;IACxB,IAAI;MACF,MAAMQ,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,OAAO,CAAC;MACzC;MACAC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAACC,EAAE,CAAC;MAC7B,IAAIL,QAAQ,CAACI,IAAI,CAACC,EAAE,IAAEC,SAAS,EAAE;QAC/BP,IAAI,CAAC,CAAC;QACL;MACH,CAAC,MAAM;QACLA,IAAI,CAAC;UAAEV,IAAI,EAAE;QAAW,CAAC,CAAC;QAC1B;MACJ;IACJ,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACZ;MACAR,IAAI,CAAC;QAAEV,IAAI,EAAE;MAAW,CAAC,CAAC;MAC1B;MACAa,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;IACpB;EACA,CAAC,MAAM;IACHJ,IAAI,CAAC,CAAC,CAAC,CAAC;EACV;AACF,CAAC,CAAC;AAEF,eAAeL,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}