{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createVNode as _createVNode, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"flex-grow-1\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AppSidebar = _resolveComponent(\"AppSidebar\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return $data.routerIsReady ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    id: \"app\",\n    class: _normalizeClass({\n      'sidebar-hidden': $options.shouldHideSidebar\n    })\n  }, [_createCommentVNode(\" Conditionally render the sidebar \"), !$options.shouldHideSidebar ? (_openBlock(), _createBlock(_component_AppSidebar, {\n    key: 0\n  })) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_router_view)])], 2 /* CLASS */)) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["class","$data","routerIsReady","_createElementBlock","key","id","_normalizeClass","$options","shouldHideSidebar","_createCommentVNode","_createBlock","_component_AppSidebar","_createElementVNode","_hoisted_1","_createVNode","_component_router_view"],"sources":["C:\\laravel\\HMS\\hotel-booking-frontend\\src\\App.vue"],"sourcesContent":["<template>\n    <div v-if=\"routerIsReady\" id=\"app\" :class=\"{ 'sidebar-hidden': shouldHideSidebar }\">\n      <!-- Conditionally render the sidebar -->\n      <AppSidebar v-if=\"!shouldHideSidebar\" />\n      <div class=\"flex-grow-1\">\n        <router-view />\n      </div>\n    </div>\n  </template>\n\n  <script>\n  import AppSidebar from '@/components/AppSidebar.vue';\n\n  export default {\n    name: 'App',\n    components: {\n      AppSidebar,\n    },\n    data() {\n      return {\n        routerIsReady: false, // Loading state\n      };\n    },\n    computed: {\n      shouldHideSidebar() {\n        return this.$route.meta.hideSidebar || false;\n      },\n    },\n    watch: {\n      $route: {\n        immediate: true,\n        handler() {\n          this.checkRoute();\n        },\n      },\n    },\n    methods: {\n      checkRoute() {\n        this.routerIsReady = false; // Pause rendering\n        this.$nextTick(() => {\n          // Delay the rendering until Vue Router resolves\n          this.routerIsReady = true;\n        });\n      },\n    },\n  };\n  </script>\n"],"mappings":";;EAIWA,KAAK,EAAC;AAAa;;;;SAHfC,KAAA,CAAAC,aAAa,I,cAAxBC,mBAAA,CAMM;IAPVC,GAAA;IAC8BC,EAAE,EAAC,KAAK;IAAEL,KAAK,EAD7CM,eAAA;MAAA,kBACmEC,QAAA,CAAAC;IAAiB;MAC9EC,mBAAA,sCAAyC,E,CACtBF,QAAA,CAAAC,iBAAiB,I,cAApCE,YAAA,CAAwCC,qBAAA;IAH9CP,GAAA;EAAA,MAAAK,mBAAA,gBAIMG,mBAAA,CAEM,OAFNC,UAEM,GADJC,YAAA,CAAeC,sBAAA,E,sBALvBN,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}